version: '3.4'

services:
  comments-app-db:
    container_name: comments-app-db
    image: mcr.microsoft.com/mssql/server:2022-latest
    ports:
      - "8082:1433"
    environment:
      - ACCEPT_EULA=Y
      - SA_PASSWORD=password@123
    networks:
      - shared-network 
    restart: always
    sysctls:
      net.ipv4.tcp_keepalive_time: 60
      net.ipv4.tcp_keepalive_intvl: 10
      net.ipv4.tcp_keepalive_probes: 5

  comments-app:
    container_name: comments-app-server
    build:
      context: .
      dockerfile: Comments-app/Dockerfile
    ports: 
      - "8080:8080"

    depends_on:
      - comments-app-db
      - kafka
      - redis
    environment:
      - DB_HOST=comments-app-db
      - DB_NAME=CommentsApp
      - DB_SA_PASSWORD=password@123
      - KAFKA_HOST=kafka:9092
    networks:
      - shared-network 

  zookeeper:
    container_name: zookeer
    image: bitnami/zookeeper:latest
    ports:
      - "2181:2181"
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes
    networks:
      - shared-network
    restart: always

  kafka:
    container_name: kafka
    image: bitnami/kafka:latest
    ports:
      - "9092:9092"
      - "7071:7071"
    environment:
      - KAFKA_BROKER_ID=1
      - KAFKA_ZOOKEEPER_CONNECT=zookeeper:2181
      - KAFKA_LISTENERS=PLAINTEXT://:9092
      - KAFKA_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092
      - ALLOW_PLAINTEXT_LISTENER=yes
      - KAFKA_OPTS=-javaagent:/usr/bin/jmx_prometheus_javaagent-0.18.0.jar=7071:/etc/kafka/kafka_jmx_config.yml
      - KAFKA_JMX_OPTS=-Dcom.sun.management.jmxremote=true -Dcom.sun.management.jmxremote.authenticate=false -Dcom.sun.management.jmxremote.ssl=false -Djava.rmi.server.hostname=prod-kafka-001 -Djava.net.preferIPv4Stack=true
    volumes:
      - ./jmx_prometheus_javaagent-0.18.0.jar:/usr/bin/jmx_prometheus_javaagent-0.18.0.jar
      - ./kafka_jmx_config.yml:/etc/kafka/kafka_jmx_config.yml
    networks:
      - shared-network
    restart: always

  redis:
    image: redis:latest
    container_name: redis-server
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    networks:
      - shared-network
    restart: always

networks:
  shared-network:
    name: shared-network
    external: false

volumes:
  redis-data:
    driver: local
